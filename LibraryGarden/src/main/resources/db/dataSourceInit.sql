-- USER 테이블 생성
CREATE TABLE IF NOT EXISTS USER(
	uidx INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	id VARCHAR(50) NOT NULL,
	password VARCHAR(225) NOT NULL,
	name VARCHAR(50) NOT NULL,
	phone VARCHAR(20) NOT NULL,
	email VARCHAR(225) NOT NULL UNIQUE,
	address VARCHAR(225) NOT NULL NOT NULL,
	userNumber VARCHAR(20) NOT NULL UNIQUE,
	role VARCHAR(50) NOT NULL DEFAULT '일반회원',
	date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify DATETIME,
	delyn CHAR(1) NOT NULL DEFAULT 'N'
);

-- BOOKS 테이블 생성
CREATE TABLE IF NOT EXISTS BOOKS(
	bidx INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	coverImg TEXT NOT NULL,
	title VARCHAR(255) NOT NULL,
	subtitle VARCHAR(255),
	author VARCHAR(100) NOT NULL,
	publisher VARCHAR(100),
	publishedYear INT,
	totalPages INT,
	isbn INT NOT NULL,
	info VARCHAR(30),
	introduction TEXT NOT NULL,
	price INT NOT NULL,
	regDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify DATETIME,
	delyn CHAR(1) NOT NULL DEFAULT 'N'
);

-- REQUEST 테이블 생성
CREATE TABLE IF NOT EXISTS REQUEST(
	rqidx INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	uidx INT NOT NULL,
	bidx INT NOT NULL,
	status VARCHAR(50) NOT NULL DEFAULT '신청중',
	rejectionReason VARCHAR(255),
	regDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify DATETIME,
	delyn CHAR(1) NOT NULL DEFAULT 'N',
	CONSTRAINT fk_request_user FOREIGN KEY (uidx) REFERENCES USER(uidx) 
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT fk_request_books FOREIGN KEY (bidx) REFERENCES BOOKS(bidx) 
        ON UPDATE CASCADE ON DELETE CASCADE
);

-- APPROVAL 테이블 생성
CREATE TABLE IF NOT EXISTS APPROVAL(
	aidx INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	uidx INT NOT NULL,
	rqidx INT NOT NULL,
	bidx INT NOT NULL,
	rejectionReason VARCHAR(255),
	approvalDate DATETIME,
	regDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify DATETIME,
	delyn CHAR(1) NOT NULL DEFAULT 'N',
    CONSTRAINT fk_approval_user FOREIGN KEY (uidx) REFERENCES USER(uidx) 
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT fk_approval_request FOREIGN KEY (rqidx) REFERENCES REQUEST(rqidx) 
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT fk_approval_books FOREIGN KEY (bidx) REFERENCES BOOKS(bidx) 
        ON UPDATE CASCADE ON DELETE CASCADE
);